using System.Collections.Generic;
using System.Threading.Tasks;
using GuildWars2.NET.v2.Items.Entities;

namespace GuildWars2.NET.v2.Items.Repositories
{
    public interface IItemRepository
    {
        ICollection<Cat> GetAllCats();
        Task<ICollection<Cat>> GetAllCatsAsync();
        ICollection<Currency> GetAllCurrencies();
        Task<ICollection<Currency>> GetAllCurrenciesAsync();
        ICollection<Dye> GetAllDyes();
        Task<ICollection<Dye>> GetAllDyesAsync();
        Cat GetCat(string id);
        Task<Cat> GetCatAsync(string id);
        ICollection<string> GetCatIds();
        Task<ICollection<string>> GetCatIdsAsync();
        ICollection<Cat> GetCats(params string[] ids);
        Task<ICollection<Cat>> GetCatsAsync(params string[] ids);
        ICollection<Currency> GetCurrencies(params string[] ids);
        Task<ICollection<Currency>> GetCurrenciesAsync(params string[] ids);
        Currency GetCurrency(string id);
        Task<Currency> GetCurrencyAsync(string id);
        ICollection<string> GetCurrencyIds();
        Task<ICollection<string>> GetCurrencyIdsAsync();
        Dye GetDye(string id);
        Task<Dye> GetDyeAsync(string id);
        ICollection<string> GetDyeIds();
        Task<ICollection<string>> GetDyeIdsAsync();
        ICollection<Dye> GetDyes(params string[] ids);
        Task<ICollection<Dye>> GetDyesAsync(params string[] ids);
        Finisher GetFinisher(string id);
        Task<Finisher> GetFinisherAsync(string id);
        ICollection<string> GetFinisherIds();
        Task<ICollection<string>> GetFinisherIdsAsync();
        ICollection<Finisher> GetFinishers(params string[] ids);
        Task<ICollection<Finisher>> GetFinishersAsync(params string[] ids);
        Glider GetGlider(string id);
        Task<Glider> GetGliderAsync(string id);
        ICollection<string> GetGliderIds();
        Task<ICollection<string>> GetGliderIdsAsync();
        ICollection<Glider> GetGliders(params string[] ids);
        Task<ICollection<Glider>> GetGlidersAsync(params string[] ids);
        Item GetItem(string id);
        Task<Item> GetItemAsync(string id);
        ICollection<string> GetItemIds();
        Task<ICollection<string>> GetItemIdsAsync();
        ICollection<Item> GetItems(params string[] ids);
        Task<ICollection<Item>> GetItemsAsync(params string[] ids);
        ItemStat GetItemStat(string id);
        Task<ItemStat> GetItemStatAsync(string id);
        ICollection<string> GetItemStatIds();
        Task<ICollection<string>> GetItemStatIdsAsync();
        ICollection<ItemStat> GetItemStats(params string[] ids);
        Task<ICollection<ItemStat>> GetItemStatsAsync(params string[] ids);
        MailCarrier GetMailCarrier(string id);
        Task<MailCarrier> GetMailCarrierAsync(string id);
        ICollection<string> GetMailCarrierIds();
        Task<ICollection<string>> GetMailCarrierIdsAsync();
        ICollection<MailCarrier> GetMailCarriers(params string[] ids);
        Task<ICollection<MailCarrier>> GetMailCarriersAsync(params string[] ids);
        ICollection<MaterialCategory> GetMaterialCategories(params string[] ids);
        Task<ICollection<MaterialCategory>> GetMaterialCategoriesAsync(params string[] ids);
        MaterialCategory GetMaterialCategory(string id);
        Task<MaterialCategory> GetMaterialCategoryAsync(string id);
        ICollection<string> GetMaterialCategoryIds();
        Task<ICollection<string>> GetMaterialCategoryIdsAsync();
        Miniature GetMiniature(string id);
        Task<Miniature> GetMiniatureAsync(string id);
        ICollection<string> GetMiniatureIds();
        Task<ICollection<string>> GetMiniatureIdsAsync();
        ICollection<Miniature> GetMiniatures(params string[] ids);
        Task<ICollection<Miniature>> GetMiniaturesAsync(params string[] ids);
        Node GetNode(string id);
        Task<Node> GetNodeAsync(string id);
        ICollection<string> GetNodeIds();
        Task<ICollection<string>> GetNodeIdsAsync();
        ICollection<Node> GetNodes(params string[] ids);
        Task<ICollection<Node>> GetNodesAsync(params string[] ids);
        Outfit GetOutfit(string id);
        Task<Outfit> GetOutfitAsync(string id);
        ICollection<string> GetOutfitIds();
        Task<ICollection<string>> GetOutfitIdsAsync();
        ICollection<Outfit> GetOutfits(params string[] ids);
        Task<ICollection<Outfit>> GetOutfitsAsync(params string[] ids);
        Recipe GetRecipe(string id);
        Task<Recipe> GetRecipeAsync(string id);
        ICollection<string> GetRecipeIds();
        Task<ICollection<string>> GetRecipeIdsAsync();
        ICollection<string> GetRecipes(string itemId, bool input);
        Task<ICollection<string>> GetRecipesAsync(string itemId, bool input);
        Skin GetSkin(string id);
        Task<Skin> GetSkinAsync(string id);
        ICollection<string> GetSkinIds();
        Task<ICollection<string>> GetSkinIdsAsync();
        ICollection<Skin> GetSkins(params string[] ids);
        Task<ICollection<Skin>> GetSkinsAsync(params string[] ids);
    }
}